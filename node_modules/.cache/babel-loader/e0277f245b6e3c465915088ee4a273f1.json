{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React\\\\votes-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styles from './App.module.css';\nimport Votes from \"./data.json\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 70\n}, {\n  field: 'county_desc',\n  headerName: 'county_desc',\n  width: 130\n}, {\n  field: 'first_name',\n  headerName: 'first_name',\n  width: 150\n}, {\n  field: 'last_name',\n  headerName: 'last_name',\n  width: 150\n}, {\n  field: 'voter_status_desc',\n  headerName: 'voter_status_desc',\n  width: 100\n}, {\n  field: 'voter_status_reason_desc',\n  headerName: 'voter_status_reason_desc',\n  width: 500\n}, {\n  field: 'res_street_address',\n  headerName: 'res_street_address',\n  width: 250\n}, {\n  field: 'res_city_desc',\n  headerName: 'res_city_desc',\n  width: 150\n}, {\n  field: 'state_cd',\n  headerName: 'state_cd',\n  width: 50\n}, {\n  field: 'zip_code',\n  headerName: 'zip_code',\n  width: 70\n}, {\n  field: 'mail_addr1',\n  headerName: 'mail_addr1',\n  width: 250\n}, {\n  field: 'mail_city',\n  headerName: 'mail_city',\n  width: 150\n}, {\n  field: 'mail_state',\n  headerName: 'mail_state',\n  width: 50\n}, {\n  field: 'mail_zipcode',\n  headerName: 'mail_zipcode',\n  width: 70\n}, {\n  field: 'full_phone_number',\n  headerName: 'full_phone_number',\n  width: 110\n}, {\n  field: 'registr_dt',\n  headerName: 'registr_dt',\n  width: 100\n}, {\n  field: 'race_code',\n  headerName: 'race_code',\n  width: 50\n}, {\n  field: 'gender_code',\n  headerName: 'gender_code',\n  width: 50\n}, {\n  field: 'birth_year',\n  headerName: 'birth_year',\n  width: 70\n}];\n\nfunction App() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: '100%',\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          sx: {\n            maxHeight: 440\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            \"aria-label\": \"sticky table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  style: {\n                    minWidth: column.minWidth\n                  },\n                  children: column.label\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  role: \"checkbox\",\n                  tabIndex: -1,\n                  children: columns.map(column => {\n                    const value = row[column.id];\n                    return /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: column.align,\n                      children: column.format && typeof value === 'number' ? column.format(value) : value\n                    }, column.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, row.code, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 100],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","styles","Votes","DataGrid","columns","field","headerName","width","App","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","height","overflow","maxHeight","map","column","align","minWidth","label","id","rows","slice","row","format","code","length"],"sources":["D:/Projects/React/votes-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport styles from './App.module.css';\nimport Votes from \"./data.json\";\nimport { DataGrid } from '@mui/x-data-grid';\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'county_desc', headerName: 'county_desc', width: 130 },\n  { field: 'first_name', headerName: 'first_name', width: 150 },\n  { field: 'last_name', headerName: 'last_name', width: 150 },\n  { field: 'voter_status_desc', headerName: 'voter_status_desc', width: 100 },\n  { field: 'voter_status_reason_desc', headerName: 'voter_status_reason_desc', width: 500 },\n  { field: 'res_street_address', headerName: 'res_street_address', width: 250 },\n  { field: 'res_city_desc', headerName: 'res_city_desc', width: 150 },\n  { field: 'state_cd', headerName: 'state_cd', width: 50 },\n  { field: 'zip_code', headerName: 'zip_code', width: 70 },\n  { field: 'mail_addr1', headerName: 'mail_addr1', width: 250 },\n  { field: 'mail_city', headerName: 'mail_city', width: 150 },\n  { field: 'mail_state', headerName: 'mail_state', width: 50 },\n  { field: 'mail_zipcode', headerName: 'mail_zipcode', width: 70 },\n  { field: 'full_phone_number', headerName: 'full_phone_number', width: 110 },\n  { field: 'registr_dt', headerName: 'registr_dt', width: 100 },\n  { field: 'race_code', headerName: 'race_code', width: 50 },\n  { field: 'gender_code', headerName: 'gender_code', width: 50 },\n  { field: 'birth_year', headerName: 'birth_year', width: 70 },\n];\n\nfunction App() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return (\n    <div>\n      <div style={{ height: '100vh', width: '100%' }}>\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n          <TableContainer sx={{ maxHeight: 440 }}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row) => {\n                    return (\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                        {columns.map((column) => {\n                          const value = row[column.id];\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                              {column.format && typeof value === 'number'\n                                ? column.format(value)\n                                : value}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}